{"version":3,"file":"radio.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/radio/radio.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { convertToBoolProperty, emptyStatusWarning } from '../helpers';\nimport { NbComponentStatus } from '../component-status';\n\n/**\n * The `NbRadioComponent` provides the same functionality as native `<input type=\"radio\">`\n * with Nebular styles and animations.\n *\n * @stacked-example(Showcase, radio/radio-showcase.component)\n *\n * ### Installation\n *\n * Import `NbRadioModule` to your feature module.\n *\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbRadioModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * Radio buttons should be wrapped in `nb-radio-group` to provide form bindings.\n *\n * ```html\n * <nb-radio-group [(ngModel)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * You can disable some radios in the group using a `disabled` attribute.\n *\n * @stacked-example(Disabled, radio/radio-disabled.component)\n *\n *\n * @styles\n *\n * radio-width:\n * radio-height:\n * radio-border-style:\n * radio-border-width:\n * radio-text-font-family:\n * radio-text-font-size:\n * radio-text-font-weight:\n * radio-text-line-height:\n * radio-outline-color:\n * radio-outline-width:\n * radio-basic-text-color:\n * radio-basic-border-color:\n * radio-basic-background-color:\n * radio-basic-checked-background-color:\n * radio-basic-checked-border-color:\n * radio-basic-inner-circle-color:\n * radio-basic-focus-border-color:\n * radio-basic-focus-inner-circle-color:\n * radio-basic-hover-background-color:\n * radio-basic-hover-border-color:\n * radio-basic-hover-inner-circle-color:\n * radio-basic-hover-checked-background-color:\n * radio-basic-active-border-color:\n * radio-basic-active-inner-circle-color:\n * radio-basic-disabled-background-color:\n * radio-basic-disabled-border-color:\n * radio-basic-disabled-text-color:\n * radio-basic-disabled-checked-background-color:\n * radio-basic-disabled-checked-border-color:\n * radio-basic-disabled-checked-inner-circle-color:\n * radio-primary-text-color:\n * radio-primary-border-color:\n * radio-primary-background-color:\n * radio-primary-checked-background-color:\n * radio-primary-checked-border-color:\n * radio-primary-inner-circle-color:\n * radio-primary-focus-border-color:\n * radio-primary-focus-inner-circle-color:\n * radio-primary-hover-background-color:\n * radio-primary-hover-border-color:\n * radio-primary-hover-inner-circle-color:\n * radio-primary-hover-checked-background-color:\n * radio-primary-active-border-color:\n * radio-primary-active-inner-circle-color:\n * radio-primary-disabled-background-color:\n * radio-primary-disabled-border-color:\n * radio-primary-disabled-text-color:\n * radio-primary-disabled-checked-background-color:\n * radio-primary-disabled-checked-border-color:\n * radio-primary-disabled-checked-inner-circle-color:\n * radio-success-text-color:\n * radio-success-border-color:\n * radio-success-background-color:\n * radio-success-checked-background-color:\n * radio-success-checked-border-color:\n * radio-success-inner-circle-color:\n * radio-success-focus-border-color:\n * radio-success-focus-inner-circle-color:\n * radio-success-hover-background-color:\n * radio-success-hover-border-color:\n * radio-success-hover-inner-circle-color:\n * radio-success-hover-checked-background-color:\n * radio-success-active-border-color:\n * radio-success-active-inner-circle-color:\n * radio-success-disabled-background-color:\n * radio-success-disabled-border-color:\n * radio-success-disabled-text-color:\n * radio-success-disabled-checked-background-color:\n * radio-success-disabled-checked-border-color:\n * radio-success-disabled-checked-inner-circle-color:\n * radio-info-text-color:\n * radio-info-border-color:\n * radio-info-background-color:\n * radio-info-checked-background-color:\n * radio-info-checked-border-color:\n * radio-info-inner-circle-color:\n * radio-info-focus-border-color:\n * radio-info-focus-inner-circle-color:\n * radio-info-hover-background-color:\n * radio-info-hover-border-color:\n * radio-info-hover-inner-circle-color:\n * radio-info-hover-checked-background-color:\n * radio-info-active-border-color:\n * radio-info-active-inner-circle-color:\n * radio-info-disabled-background-color:\n * radio-info-disabled-border-color:\n * radio-info-disabled-text-color:\n * radio-info-disabled-checked-background-color:\n * radio-info-disabled-checked-border-color:\n * radio-info-disabled-checked-inner-circle-color:\n * radio-warning-text-color:\n * radio-warning-border-color:\n * radio-warning-background-color:\n * radio-warning-checked-background-color:\n * radio-warning-checked-border-color:\n * radio-warning-inner-circle-color:\n * radio-warning-focus-border-color:\n * radio-warning-focus-inner-circle-color:\n * radio-warning-hover-background-color:\n * radio-warning-hover-border-color:\n * radio-warning-hover-inner-circle-color:\n * radio-warning-hover-checked-background-color:\n * radio-warning-active-border-color:\n * radio-warning-active-inner-circle-color:\n * radio-warning-disabled-background-color:\n * radio-warning-disabled-border-color:\n * radio-warning-disabled-text-color:\n * radio-warning-disabled-checked-background-color:\n * radio-warning-disabled-checked-border-color:\n * radio-warning-disabled-checked-inner-circle-color:\n * radio-danger-text-color:\n * radio-danger-border-color:\n * radio-danger-background-color:\n * radio-danger-checked-background-color:\n * radio-danger-checked-border-color:\n * radio-danger-inner-circle-color:\n * radio-danger-focus-border-color:\n * radio-danger-focus-inner-circle-color:\n * radio-danger-hover-background-color:\n * radio-danger-hover-border-color:\n * radio-danger-hover-inner-circle-color:\n * radio-danger-hover-checked-background-color:\n * radio-danger-active-border-color:\n * radio-danger-active-inner-circle-color:\n * radio-danger-disabled-background-color:\n * radio-danger-disabled-border-color:\n * radio-danger-disabled-text-color:\n * radio-danger-disabled-checked-background-color:\n * radio-danger-disabled-checked-border-color:\n * radio-danger-disabled-checked-inner-circle-color:\n * radio-control-text-color:\n * radio-control-background-color:\n * radio-control-border-color:\n * radio-control-checked-background-color:\n * radio-control-checked-border-color:\n * radio-control-inner-circle-color:\n * radio-control-focus-border-color:\n * radio-control-focus-inner-circle-color:\n * radio-control-hover-background-color:\n * radio-control-hover-border-color:\n * radio-control-hover-inner-circle-color:\n * radio-control-hover-checked-background-color:\n * radio-control-active-border-color:\n * radio-control-active-inner-circle-color:\n * radio-control-disabled-background-color:\n * radio-control-disabled-border-color:\n * radio-control-disabled-text-color:\n * radio-control-disabled-checked-background-color:\n * radio-control-disabled-checked-border-color:\n * radio-control-disabled-checked-inner-circle-color:\n * */\n@Component({\n  selector: 'nb-radio',\n  template: `\n    <label>\n      <input\n        type=\"radio\"\n        class=\"native-input visually-hidden\"\n        [name]=\"name\"\n        [value]=\"value\"\n        [checked]=\"checked\"\n        [disabled]=\"disabled\"\n        (change)=\"onChange($event)\"\n        (click)=\"onClick($event)\">\n      <span class=\"outer-circle\"></span>\n      <span class=\"inner-circle\"></span>\n      <span class=\"text\">\n        <ng-content></ng-content>\n      </span>\n    </label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./radio.component.css'],\n})\nexport class NbRadioComponent {\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    if (this._name !== value) {\n      this._name = value;\n      this.cd.detectChanges();\n    }\n  }\n  private _name: string;\n\n  @Input()\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    const boolValue = convertToBoolProperty(value);\n    if (this._checked !== boolValue) {\n      this._checked = boolValue;\n      this.cd.markForCheck();\n    }\n  }\n  private _checked: boolean = false;\n\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    if (this._value !== value) {\n      this._value = value;\n      this.cd.markForCheck();\n    }\n  }\n  private _value: any;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled: boolean) {\n    const boolValue = convertToBoolProperty(disabled);\n    if (this._disabled !== boolValue) {\n      this._disabled = boolValue;\n      this.cd.markForCheck();\n    }\n  }\n  private _disabled: boolean = false;\n\n  @Input()\n  get status(): NbComponentStatus {\n    return this._status;\n  }\n  set status(value: NbComponentStatus) {\n    if ((value as string) === '') {\n      emptyStatusWarning('NbRadio');\n      value = 'basic';\n    }\n\n    if (this._status !== value) {\n      this._status = value;\n      this.cd.markForCheck();\n    }\n  }\n  private _status: NbComponentStatus = 'basic';\n\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\n\n  @Output() blur: EventEmitter<void> = new EventEmitter();\n\n  constructor(protected cd: ChangeDetectorRef) {}\n\n  @HostBinding('class.status-primary')\n  get isPrimary(): boolean {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-success')\n  get isSuccess(): boolean {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get isWarning(): boolean {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get isDanger(): boolean {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.status-info')\n  get isInfo(): boolean {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-basic')\n  get isBasic(): boolean {\n    return this.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get isControl(): boolean {\n    return this.status === 'control';\n  }\n\n  onChange(event: Event) {\n    event.stopPropagation();\n    this.checked = true;\n    this.valueChange.emit(this.value);\n  }\n\n  onClick(event: Event) {\n    event.stopPropagation();\n  }\n}\n"]}