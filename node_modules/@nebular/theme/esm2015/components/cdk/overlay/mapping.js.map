{"version":3,"file":"mapping.js","sourceRoot":"","sources":["../../../../../../../.ng_build/theme/components/cdk/overlay/mapping.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EACL,SAAS,EACT,UAAU,EAEV,QAAQ,GAGT,MAAM,eAAe,CAAC;AACvB,OAAO,EACL,SAAS,EACT,eAAe,EACf,eAAe,EAEf,cAAc,EACd,YAAY,EACZ,cAAc,GACf,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAKL,iCAAiC,EACjC,OAAO,EAEP,gBAAgB,EAChB,aAAa,EACb,sBAAsB,GAKvB,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;;;AAIjD,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,SAAS;CAC/C,CAAA;AADY,iBAAiB;IAD7B,SAAS,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;GACzB,iBAAiB,CAC7B;SADY,iBAAiB;AAI9B,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,eAAe;CAC3D,CAAA;AADY,uBAAuB;IADnC,SAAS,CAAC,EAAE,QAAQ,EAAE,kBAAkB,EAAE,CAAC;GAC/B,uBAAuB,CACnC;SADY,uBAAuB;AAGpC,MAAM,OAAO,iBAA2B,SAAQ,eAAkB;CACjE;AAGD,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,OAAO;CACrC,CAAA;AADY,SAAS;IADrB,UAAU,EAAE;GACA,SAAS,CACrB;SADY,SAAS;AAItB,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,QAAQ;CACvC,CAAA;AADY,UAAU;IADtB,UAAU,EAAE;GACA,UAAU,CACtB;SADY,UAAU;AAIvB,IAAa,wBAAwB,GAArC,MAAa,wBAAyB,SAAQ,sBAAsB;CACnE,CAAA;AADY,wBAAwB;IADpC,UAAU,EAAE;GACA,wBAAwB,CACpC;SADY,wBAAwB;AAGrC,MAAM,OAAO,gBAA0B,SAAQ,cAAiB;IAC9D,YAAY,QAAwB,EAAE,gBAAmC,EAAE,OAAW;QACpF,KAAK,CAAC,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,MAAM,OAAO,kBAAmB,SAAQ,gBAAgB;;;AAGxD,MAAM,OAAO,mCAAoC,SAAQ,iCAAiC;CACzF;AAED,MAAM,OAAO,gBAAiB,SAAQ,cAAc;CACnD;AAaD,MAAM,WAAW,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAElD;;;KAGK;AAUL,IAAa,kBAAkB,0BAA/B,MAAa,kBAAkB;IAC7B,MAAM,CAAC,OAAO;QACZ,OAA6B;YAC3B,QAAQ,EAAE,oBAAkB;YAC5B,SAAS,EAAE;gBACT,SAAS;gBACT,UAAU;gBACV,wBAAwB;aACzB;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AAXY,kBAAkB;IAT9B,QAAQ,CAAC;QACR,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC;QACzB,OAAO,EAAE;YACP,GAAG,WAAW;YACd,iBAAiB;YACjB,uBAAuB;SACxB;QACD,YAAY,EAAE,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;KAC3D,CAAC;GACW,kBAAkB,CAW9B;SAXY,kBAAkB","sourcesContent":["import {\n  Directive,\n  Injectable,\n  ModuleWithProviders,\n  NgModule,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  CdkPortal,\n  CdkPortalOutlet,\n  ComponentPortal,\n  Portal,\n  PortalInjector,\n  PortalModule,\n  TemplatePortal,\n} from '@angular/cdk/portal';\nimport {\n  ComponentType,\n  ConnectedOverlayPositionChange,\n  ConnectedPosition,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayModule,\n  OverlayPositionBuilder,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n  ScrollStrategyOptions,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\n\n\n@Directive({ selector: '[nbPortal]' })\nexport class NbPortalDirective extends CdkPortal {\n}\n\n@Directive({ selector: '[nbPortalOutlet]' })\nexport class NbPortalOutletDirective extends CdkPortalOutlet {\n}\n\nexport class NbComponentPortal<T = any> extends ComponentPortal<T> {\n}\n\n@Injectable()\nexport class NbOverlay extends Overlay {\n}\n\n@Injectable()\nexport class NbPlatform extends Platform {\n}\n\n@Injectable()\nexport class NbOverlayPositionBuilder extends OverlayPositionBuilder {\n}\n\nexport class NbTemplatePortal<T = any> extends TemplatePortal<T> {\n  constructor(template: TemplateRef<T>, viewContainerRef?: ViewContainerRef, context?: T) {\n    super(template, viewContainerRef, context);\n  }\n}\n\nexport class NbOverlayContainer extends OverlayContainer {\n}\n\nexport class NbFlexibleConnectedPositionStrategy extends FlexibleConnectedPositionStrategy {\n}\n\nexport class NbPortalInjector extends PortalInjector {\n}\n\nexport type NbPortal<T = any> = Portal<T>;\nexport type NbOverlayRef = OverlayRef;\nexport type NbComponentType<T = any> = ComponentType<T>;\nexport type NbPositionStrategy = PositionStrategy;\nexport type NbConnectedPosition = ConnectedPosition;\nexport type NbConnectedOverlayPositionChange = ConnectedOverlayPositionChange;\nexport type NbConnectionPositionPair = ConnectionPositionPair;\nexport type NbOverlayConfig = OverlayConfig;\nexport type NbScrollStrategyOptions = ScrollStrategyOptions;\nexport type NbScrollStrategy = ScrollStrategy;\n\nconst CDK_MODULES = [OverlayModule, PortalModule];\n\n/**\n * This module helps us to keep all angular/cdk deps inside our cdk module via providing aliases.\n * Approach will help us move cdk in separate npm package and refactor nebular/theme code.\n * */\n@NgModule({\n  imports: [...CDK_MODULES],\n  exports: [\n    ...CDK_MODULES,\n    NbPortalDirective,\n    NbPortalOutletDirective,\n  ],\n  declarations: [NbPortalDirective, NbPortalOutletDirective],\n})\nexport class NbCdkMappingModule {\n  static forRoot(): ModuleWithProviders {\n    return <ModuleWithProviders> {\n      ngModule: NbCdkMappingModule,\n      providers: [\n        NbOverlay,\n        NbPlatform,\n        NbOverlayPositionBuilder,\n      ],\n    };\n  }\n}\n"]}