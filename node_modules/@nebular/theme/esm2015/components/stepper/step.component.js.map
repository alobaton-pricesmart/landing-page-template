{"version":3,"file":"step.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/stepper/step.component.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACjF,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AAEjD,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;AAEnD;;;GAGG;AASH,IAAa,eAAe,GAA5B,MAAa,eAAe;IA8D1B,YAAgC,OAAO;QAR7B,eAAU,GAAY,KAAK,CAAC;QAMtC,eAAU,GAAG,KAAK,CAAC;QAGjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IA/BD;;;;SAIK;IACL,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,KAAK,YAAY,WAAW,CAAC;IAC3C,CAAC;IAED;;;;OAIG;IAEH,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC;IAC7C,CAAC;IACD,IAAI,SAAS,CAAC,KAAc;QAC1B,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAGD,IAAc,WAAW;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;IACxF,CAAC;IAQD;;SAEK;IACL,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED;;SAEK;IACL,KAAK;QACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC1B;IACH,CAAC;CACF,CAAA;AAxE2C;IAAzC,SAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;8BAAU,WAAW;gDAAM;AAO3D;IAAR,KAAK,EAAE;8BAAc,eAAe;oDAAC;AAO7B;IAAR,KAAK,EAAE;;8CAAgC;AAO/B;IAAR,KAAK,EAAE;;+CAAe;AAiBvB;IADC,KAAK,EAAE;;;gDAGP;AAlDU,eAAe;IAR3B,SAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,QAAQ,EAAE;;;;GAIT;KACF,CAAC;IA+Da,WAAA,MAAM,CAAC,UAAU,CAAC,CAAA;;GA9DpB,eAAe,CAkF3B;SAlFY,eAAe","sourcesContent":["import { Component, Inject, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { NbStepperComponent } from './stepper.component';\nimport { NB_STEPPER } from './stepper-tokens';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Component intended to be used within  the `<nb-stepper>` component.\n * Container for a step\n */\n@Component({\n  selector: 'nb-step',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class NbStepComponent {\n\n  protected stepper: NbStepperComponent;\n\n  // TODO static must be false as of Angular 9.0.0, issues/1514\n  /**\n   * Step content\n   *\n   * @type {TemplateRef}\n   */\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<any>;\n\n  /**\n   * Top level abstract control of the step\n   *\n   * @type {AbstractControl}\n   */\n  @Input() stepControl: AbstractControl;\n\n  /**\n   * Step label\n   *\n   * @type {string|TemplateRef<any>}\n   */\n  @Input() label: string|TemplateRef<any>;\n\n  /**\n   * Whether step will be displayed in wizard\n   *\n   * @type {boolean}\n   */\n  @Input() hidden: false;\n\n  /**\n   * Check that label is a TemplateRef.\n   *\n   * @return boolean\n   * */\n  get isLabelTemplate(): boolean {\n    return this.label instanceof TemplateRef;\n  }\n\n  /**\n   * Whether step is marked as completed.\n   *\n   * @type {boolean}\n   */\n  @Input()\n  get completed(): boolean {\n    return this._completed || this.isCompleted;\n  }\n  set completed(value: boolean) {\n    this._completed = convertToBoolProperty(value);\n  }\n  protected _completed: boolean = false;\n\n  protected get isCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  interacted = false;\n\n  constructor(@Inject(NB_STEPPER) stepper) {\n    this.stepper = stepper;\n  }\n\n  /**\n   * Mark step as selected\n   * */\n  select(): void {\n    this.stepper.selected = this;\n  }\n\n  /**\n   * Reset step and stepControl state\n   * */\n  reset(): void {\n    this.interacted = false;\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n}\n"]}