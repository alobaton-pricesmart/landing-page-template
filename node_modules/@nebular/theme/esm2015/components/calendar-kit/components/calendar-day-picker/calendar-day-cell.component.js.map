{"version":3,"file":"calendar-day-cell.component.js","sourceRoot":"","sources":["../../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { NbCalendarCell } from '../../model';\nimport { NbDateService } from '../../services/date.service';\n\n\n@Component({\n  selector: 'nb-calendar-day-cell',\n  template: '{{ day }}',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { 'class': 'day-cell' },\n})\nexport class NbCalendarDayCellComponent<D> implements NbCalendarCell<D, D> {\n\n  @Input() date: D;\n\n  @Input() selectedValue: D;\n\n  @Input() visibleDate: D;\n\n  @Input() min: D;\n\n  @Input() max: D;\n\n  @Input() filter: (D) => boolean;\n\n  @Output() select: EventEmitter<D> = new EventEmitter(true);\n\n  constructor(protected dateService: NbDateService<D>) {\n  }\n\n  @HostBinding('class.today') get today(): boolean {\n    return this.dateService.isSameDaySafe(this.date, this.dateService.today());\n  }\n\n  @HostBinding('class.bounding-month') get boundingMonth(): boolean {\n    return !this.dateService.isSameMonthSafe(this.date, this.visibleDate);\n  }\n\n  @HostBinding('class.selected') get selected(): boolean {\n    return this.dateService.isSameDaySafe(this.date, this.selectedValue);\n  }\n\n  @HostBinding('class.empty') get empty(): boolean {\n    return !this.date;\n  }\n\n  @HostBinding('class.disabled') get disabled(): boolean {\n    return this.smallerThanMin() || this.greaterThanMax() || this.dontFitFilter();\n  }\n\n  get day(): number {\n    return this.date && this.dateService.getDate(this.date);\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.disabled || this.empty) {\n      return;\n    }\n\n    this.select.emit(this.date);\n  }\n\n  private smallerThanMin(): boolean {\n    return this.date && this.min && this.dateService.compareDates(this.date, this.min) < 0;\n  }\n\n  private greaterThanMax(): boolean {\n    return this.date && this.max && this.dateService.compareDates(this.date, this.max) > 0;\n  }\n\n  private dontFitFilter(): boolean {\n    return this.date && this.filter && !this.filter(this.date);\n  }\n}\n"]}