{"version":3,"file":"calendar-day-picker.component.js","sourceRoot":"","sources":["../../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,WAAW,EACX,KAAK,EAEL,MAAM,EAEN,IAAI,GACL,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,2BAA2B,EAAE,MAAM,6CAA6C,CAAC;AAC1F,OAAO,EAAE,0BAA0B,EAAE,MAAM,+BAA+B,CAAC;AAC3E,OAAO,EAAkB,cAAc,EAAE,MAAM,aAAa,CAAC;AAC7D,OAAO,EAAE,qBAAqB,EAAE,MAAM,kBAAkB,CAAC;AAGzD;;KAEK;AA0BL,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IA0FvC,YAAoB,UAA0C;QAA1C,eAAU,GAAV,UAAU,CAAgC;QAnF9D;;;aAGK;QACI,mBAAc,GAAY,IAAI,CAAC;QA0BxC,kBAAa,GAAmC,0BAA0B,CAAC;QAE3E;;;aAGK;QACI,SAAI,GAAmB,cAAc,CAAC,MAAM,CAAC;QAkB5C,oBAAe,GAAY,KAAK,CAAC;QAO3C;;aAEK;QACK,eAAU,GAAG,IAAI,YAAY,EAAK,CAAC;IAoB7C,CAAC;IA/DD;;SAEK;IAEL,IAAI,gBAAgB,CAAC,aAAyC;QAC5D,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACpC;IACH,CAAC;IAcD;;;SAGK;IAEL,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IACD,IAAI,cAAc,CAAC,KAAc;QAC/B,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAcD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,MAAM,CAAC;IAC7C,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,CAAC;IAC5C,CAAC;IAYD,WAAW,CAAC,EAAE,WAAW,EAAiB;QACxC,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SACpF;IACH,CAAC;IAED,QAAQ,CAAC,GAAM;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;CACF,CAAA;AAjGU;IAAR,KAAK,EAAE;;iEAAgB;AAMf;IAAR,KAAK,EAAE;;oEAAgC;AAK/B;IAAR,KAAK,EAAE;;yDAAQ;AAKP;IAAR,KAAK,EAAE;;yDAAQ;AAKP;IAAR,KAAK,EAAE;;4DAAwB;AAMhC;IADC,KAAK,CAAC,eAAe,CAAC;8BACa,IAAI;qCAAJ,IAAI;oEAIvC;AAOQ;IAAR,KAAK,EAAE;;0DAA8C;AAK7C;IAAR,KAAK,EAAE;;0DAAS;AAOjB;IADC,KAAK,EAAE;;;kEAGP;AASQ;IAAR,KAAK,EAAE;;sEAA0B;AAKxB;IAAT,MAAM,EAAE;;gEAAoC;AAG7C;IADC,WAAW,CAAC,cAAc,CAAC;;;0DAG3B;AAGD;IADC,WAAW,CAAC,aAAa,CAAC;;;yDAG1B;AAjFU,4BAA4B;IAzBxC,SAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;GAmBT;QAED,eAAe,EAAE,uBAAuB,CAAC,MAAM;;KAChD,CAAC;qCA2FgC,2BAA2B;GA1FhD,4BAA4B,CAsGxC;SAtGY,4BAA4B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  Type,\n} from '@angular/core';\n\nimport { NbCalendarMonthModelService } from '../../services/calendar-month-model.service';\nimport { NbCalendarDayCellComponent } from './calendar-day-cell.component';\nimport { NbCalendarCell, NbCalendarSize } from '../../model';\nimport { convertToBoolProperty } from '../../../helpers';\n\n\n/**\n * Provides capability pick days.\n * */\n@Component({\n  selector: 'nb-calendar-day-picker',\n  template: `\n    <nb-calendar-week-numbers *ngIf=\"showWeekNumber\"\n                              [weeks]=\"weeks\"\n                              [size]=\"size\"\n                              [weekNumberSymbol]=\"weekNumberSymbol\">\n    </nb-calendar-week-numbers>\n    <div class=\"days-container\">\n      <nb-calendar-days-names></nb-calendar-days-names>\n      <nb-calendar-picker\n          [data]=\"weeks\"\n          [visibleDate]=\"visibleDate\"\n          [selectedValue]=\"date\"\n          [cellComponent]=\"cellComponent\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [filter]=\"filter\"\n          (select)=\"onSelect($event)\">\n      </nb-calendar-picker>\n    </div>\n  `,\n  styleUrls: ['./calendar-day-picker.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbCalendarDayPickerComponent<D, T> implements OnChanges {\n\n  /**\n   * Describes which month picker have to render.\n   * */\n  @Input() visibleDate: D;\n\n  /**\n   * Defines if we should render previous and next months\n   * in the current month view.\n   * */\n  @Input() boundingMonths: boolean = true;\n\n  /**\n   * Minimum available date for selection.\n   * */\n  @Input() min: D;\n\n  /**\n   * Maximum available date for selection.\n   * */\n  @Input() max: D;\n\n  /**\n   * Predicate that decides which cells will be disabled.\n   * */\n  @Input() filter: (D) => boolean;\n\n  /**\n   * Custom day cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input('cellComponent')\n  set setCellComponent(cellComponent: Type<NbCalendarCell<D, T>>) {\n    if (cellComponent) {\n      this.cellComponent = cellComponent;\n    }\n  }\n  cellComponent: Type<NbCalendarCell<any, any>> = NbCalendarDayCellComponent;\n\n  /**\n   * Size of the component.\n   * Can be 'medium' which is default or 'large'.\n   * */\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n\n  /**\n   * Already selected date.\n   * */\n  @Input() date: T;\n\n  /**\n   * Determines should we show week numbers column.\n   * False by default.\n   * */\n  @Input()\n  get showWeekNumber(): boolean {\n    return this._showWeekNumber;\n  }\n  set showWeekNumber(value: boolean) {\n    this._showWeekNumber = convertToBoolProperty(value);\n  }\n  protected _showWeekNumber: boolean = false;\n\n  /**\n   * Sets symbol used as a header for week numbers column\n   * */\n  @Input() weekNumberSymbol: string;\n\n  /**\n   * Fires newly selected date.\n   * */\n  @Output() dateChange = new EventEmitter<D>();\n\n  @HostBinding('class.medium')\n  get medium() {\n    return this.size === NbCalendarSize.MEDIUM;\n  }\n\n  @HostBinding('class.large')\n  get large() {\n    return this.size === NbCalendarSize.LARGE;\n  }\n\n  /**\n   * Day picker model.\n   * Provides all days in current month and if boundingMonth is true some days\n   * from previous and next one.\n   * */\n  weeks: D[][];\n\n  constructor(private monthModel: NbCalendarMonthModelService<D>) {\n  }\n\n  ngOnChanges({ visibleDate }: SimpleChanges) {\n    if (visibleDate) {\n      this.weeks = this.monthModel.createDaysGrid(this.visibleDate, this.boundingMonths);\n    }\n  }\n\n  onSelect(day: D) {\n    this.dateChange.emit(day);\n  }\n}\n"]}