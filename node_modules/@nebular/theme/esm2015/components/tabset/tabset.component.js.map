{"version":3,"file":"tabset.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/tabset/tabset.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { map, delay, filter } from 'rxjs/operators';\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  HostBinding,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { convertToBoolProperty } from '../helpers';\nimport { NbComponentStatus } from '../component-status';\nimport { NbBadgePosition } from '../badge/badge.component';\nimport { NbIconConfig } from '../icon/icon.component';\n\n/**\n * Specific tab container.\n *\n * ```ts\n * <nb-tab tabTitle=\"Users\"\n *   badgeText=\"99+\"\n *   badgeStatus=\"danger\">\n *   <p>List of <strong>users</strong>.</p>\n * </nb-tab>\n ```\n */\n@Component({\n  selector: 'nb-tab',\n  template: `\n    <ng-container *ngIf=\"init\">\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n})\nexport class NbTabComponent {\n\n  /**\n   * Tab title\n   * @type {string}\n   */\n  @Input() tabTitle: string;\n\n  /**\n   * Tab id\n   * @type {string}\n   */\n  @Input() tabId: string;\n\n  /**\n   * Tab icon name or icon config object\n   * @type {string | NbIconConfig}\n   */\n  @Input() tabIcon: string | NbIconConfig;\n\n  /**\n   * Item is disabled and cannot be opened.\n   * @type {boolean}\n   */\n  @Input('disabled')\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this.disabledValue;\n  }\n  set disabled(val: boolean) {\n    this.disabledValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Show only icons when width is smaller than `tabs-icon-only-max-width`\n   * @type {boolean}\n   */\n  @Input()\n  set responsive(val: boolean) {\n    this.responsiveValue = convertToBoolProperty(val);\n  }\n\n  get responsive() {\n    return this.responsiveValue;\n  }\n\n  @Input() route: string;\n\n  @HostBinding('class.content-active')\n  activeValue: boolean = false;\n\n  responsiveValue: boolean = false;\n  disabledValue = false;\n\n  /**\n   * Specifies active tab\n   * @returns {boolean}\n   */\n  @Input()\n  get active() {\n    return this.activeValue;\n  }\n  set active(val: boolean) {\n    this.activeValue = convertToBoolProperty(val);\n    if (this.activeValue) {\n      this.init = true;\n    }\n  }\n\n  /**\n   * Lazy load content before tab selection\n   * TODO: rename, as lazy is by default, and this is more `instant load`\n   * @param {boolean} val\n   */\n  @Input()\n  set lazyLoad(val: boolean) {\n    this.init = convertToBoolProperty(val);\n  }\n\n  /**\n   * Badge text to display\n   * @type string\n   */\n  @Input() badgeText: string;\n\n  /**\n   * Badge status (adds specific styles):\n   * 'primary', 'info', 'success', 'warning', 'danger'\n   * @param {string} val\n   */\n  @Input() badgeStatus: NbComponentStatus;\n\n  /**\n   * Badge position.\n   * Can be set to any class or to one of predefined positions:\n   * 'top left', 'top right', 'bottom left', 'bottom right',\n   * 'top start', 'top end', 'bottom start', 'bottom end'\n   * @type string\n   */\n  @Input() badgePosition: NbBadgePosition;\n\n  init: boolean = false;\n}\n\n// TODO: Combine tabset with route-tabset, so that we can:\n// - have similar interface\n// - easy to migrate from one to another\n// - can mix them both (route/content tab)\n/**\n *\n * Dynamic tabset component.\n * @stacked-example(Showcase, tabset/tabset-showcase.component)\n *\n * Basic tabset example\n *\n * ```html\n * <nb-tabset>\n *  <nb-tab tabTitle=\"Simple Tab #1\">\n *    Tab content 1\n *  </nb-tab>\n *  <nb-tab tabTitle=\"Simple Tab #2\">\n *    Tab content 2\n *  </nb-tab>\n * </nb-tabset>\n * ```\n *\n * ### Installation\n *\n * Import `NbTabsetModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbTabsetModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * It is also possible to set a badge to a particular tab:\n * @stacked-example(Tab With Badge, tabset/tabset-badge.component)\n *\n * and we can set it to full a width of a parent component\n * @stacked-example(Full Width, tabset/tabset-width.component)\n *\n * `tabIcon` should be used to add an icon to the tab. Icon can also be combined with title.\n * `responsive` tab property if set allows you to hide the title on smaller screens\n * (`tabs-icon-only-max-width` property) for better responsive behaviour. You can open the following example and make\n * your screen smaller - titles will be hidden in the last tabset in the list:\n *\n * @stacked-example(Icon, tabset/tabset-icon.component)\n *\n * It is also possible to disable a tab using `disabled` property:\n * @stacked-example(Disabled Tab, tabset/tabset-disabled.component)\n *\n * @styles\n *\n * tabset-background-color:\n * tabset-border-radius:\n * tabset-shadow:\n * tabset-tab-background-color:\n * tabset-tab-padding:\n * tabset-tab-text-color:\n * tabset-tab-text-font-family:\n * tabset-tab-text-font-size:\n * tabset-tab-text-font-weight:\n * tabset-tab-text-line-height:\n * tabset-tab-text-transform:\n * tabset-tab-underline-width:\n * tabset-tab-underline-color:\n * tabset-tab-active-background-color:\n * tabset-tab-active-text-color:\n * tabset-tab-active-underline-color:\n * tabset-tab-focus-background-color:\n * tabset-tab-focus-text-color:\n * tabset-tab-focus-underline-color:\n * tabset-tab-hover-background-color:\n * tabset-tab-hover-text-color:\n * tabset-tab-hover-underline-color:\n * tabset-tab-disabled-background-color:\n * tabset-tab-disabled-text-color:\n * tabset-tab-disabled-underline-color:\n * tabset-divider-color:\n * tabset-divider-style:\n * tabset-divider-width:\n * tabset-content-background-color:\n * tabset-content-padding:\n * tabset-content-text-color:\n * tabset-content-text-font-family:\n * tabset-content-text-font-size:\n * tabset-content-text-font-weight:\n * tabset-content-text-line-height:\n * tabset-scrollbar-color:\n * tabset-scrollbar-background-color:\n * tabset-scrollbar-width:\n * tabset-tab-text-hide-breakpoint:\n */\n@Component({\n  selector: 'nb-tabset',\n  styleUrls: ['./tabset.component.css'],\n  template: `\n    <ul class=\"tabset\">\n      <li *ngFor=\"let tab of tabs\"\n          (click)=\"selectTab(tab)\"\n          (keyup.space)=\"selectTab(tab)\"\n          (keyup.enter)=\"selectTab(tab)\"\n          [class.responsive]=\"tab.responsive\"\n          [class.active]=\"tab.active\"\n          [class.disabled]=\"tab.disabled\"\n          [attr.tabindex]=\"tab.disabled ? -1 : 0\"\n          class=\"tab\">\n        <a href (click)=\"$event.preventDefault()\" tabindex=\"-1\" class=\"tab-link\">\n          <nb-icon *ngIf=\"tab.tabIcon\" [config]=\"tab.tabIcon\"></nb-icon>\n          <span *ngIf=\"tab.tabTitle\" class=\"tab-text\">{{ tab.tabTitle }}</span>\n        </a>\n        <nb-badge *ngIf=\"tab.badgeText\"\n          [text]=\"tab.badgeText\"\n          [status]=\"tab.badgeStatus\"\n          [position]=\"tab.badgePosition\">\n        </nb-badge>\n      </li>\n    </ul>\n    <ng-content select=\"nb-tab\"></ng-content>\n  `,\n})\nexport class NbTabsetComponent implements AfterContentInit {\n\n  @ContentChildren(NbTabComponent) tabs: QueryList<NbTabComponent>;\n\n  @HostBinding('class.full-width')\n  fullWidthValue: boolean = false;\n\n  /**\n   * Take full width of a parent\n   * @param {boolean} val\n   */\n  @Input()\n  set fullWidth(val: boolean) {\n    this.fullWidthValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * If specified - tabset listens to this parameter and selects corresponding tab.\n   * @type {string}\n   */\n  @Input() routeParam: string;\n\n  /**\n   * Emits when tab is selected\n   * @type EventEmitter<any>\n   */\n  @Output() changeTab = new EventEmitter<any>();\n\n  constructor(private route: ActivatedRoute,\n              private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  // TODO: refactoring this component, avoid change detection loop\n  ngAfterContentInit() {\n    this.route.params\n      .pipe(\n        map(\n          (params: any) =>\n            this.tabs.find((tab) => this.routeParam ? tab.route === params[this.routeParam] : tab.active),\n        ),\n        delay(0),\n        map((tab: NbTabComponent) => tab || this.tabs.first),\n        filter((tab: NbTabComponent) => !!tab),\n      )\n      .subscribe((tabToSelect: NbTabComponent) => {\n        this.selectTab(tabToSelect);\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  // TODO: navigate to routeParam\n  selectTab(selectedTab: NbTabComponent) {\n    if (!selectedTab.disabled) {\n      this.tabs.forEach(tab => tab.active = tab === selectedTab);\n      this.changeTab.emit(selectedTab);\n    }\n  }\n}\n"]}