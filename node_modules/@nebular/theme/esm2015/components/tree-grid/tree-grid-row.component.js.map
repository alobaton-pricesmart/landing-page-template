{"version":3,"file":"tree-grid-row.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/tree-grid/tree-grid-row.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, ElementRef, HostListener, Inject, Input, OnDestroy } from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { NbCdkFooterRow, NbCdkHeaderRow, NbCdkRow } from '../cdk/table/type-mappings';\nimport { NbFooterRowComponent, NbHeaderRowComponent, NbRowComponent } from '../cdk/table/row';\nimport { NbTreeGridComponent } from './tree-grid.component';\nimport { NB_TREE_GRID } from './tree-grid-injection-tokens';\n\nexport const NB_ROW_DOUBLE_CLICK_DELAY: number = 200;\n\n/**\n * Cells container. Adds the right class and role.\n */\n@Component({\n  selector: 'tr[nbTreeGridRow]',\n  template: `<ng-container nbCellOutlet></ng-container>`,\n  host: {\n    'class': 'nb-tree-grid-row',\n    'role': 'row',\n  },\n  providers: [{ provide: NbCdkRow, useExisting: NbTreeGridRowComponent }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbTreeGridRowComponent extends NbRowComponent implements OnDestroy {\n  private readonly doubleClick$ = new Subject();\n  private readonly tree: NbTreeGridComponent<any>;\n\n  /**\n   * Time to wait for second click to expand row deeply.\n   * 200ms by default.\n   */\n  @Input() doubleClickDelay: number = NB_ROW_DOUBLE_CLICK_DELAY;\n\n  /**\n   * Toggle row on click. Enabled by default.\n   */\n  @Input() clickToToggle: boolean = true;\n\n  @HostListener('click')\n  toggleIfEnabledNode(): void {\n    if (!this.clickToToggle) {\n      return;\n    }\n\n    timer(NB_ROW_DOUBLE_CLICK_DELAY)\n      .pipe(\n        take(1),\n        takeUntil(this.doubleClick$),\n      )\n      .subscribe(() => this.tree.toggleRow(this));\n  }\n\n  @HostListener('dblclick')\n  toggleIfEnabledNodeDeep() {\n    if (!this.clickToToggle) {\n      return;\n    }\n\n    this.doubleClick$.next();\n    this.tree.toggleRow(this, { deep: true });\n  }\n\n  constructor(\n    @Inject(NB_TREE_GRID) tree,\n    public elementRef: ElementRef<HTMLElement>,\n  ) {\n    super();\n    this.tree = tree as NbTreeGridComponent<any>;\n  }\n\n  ngOnDestroy() {\n    this.doubleClick$.complete();\n  }\n}\n\n@Component({\n  selector: 'tr[nbTreeGridHeaderRow]',\n  template: `\n    <ng-container nbCellOutlet></ng-container>`,\n  host: {\n    'class': 'nb-tree-grid-header-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: NbCdkHeaderRow, useExisting: NbTreeGridHeaderRowComponent }],\n})\nexport class NbTreeGridHeaderRowComponent extends NbHeaderRowComponent {}\n\n@Component({\n  selector: 'tr[nbTreeGridFooterRow]',\n  template: `\n    <ng-container nbCellOutlet></ng-container>`,\n  host: {\n    'class': 'nb-tree-grid-footer-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: NbCdkFooterRow, useExisting: NbTreeGridFooterRowComponent }],\n})\nexport class NbTreeGridFooterRowComponent extends NbFooterRowComponent {}\n"]}