{"version":3,"file":"calendar.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/calendar/calendar.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAE7E,OAAO,EAAkB,cAAc,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3F,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;AAGnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiJK;AAuBL,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAxKhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAiJK;IACL;QAwBE;;;aAGK;QACI,kBAAa,GAAY,IAAI,CAAC;QAEvC;;aAEK;QACI,cAAS,GAAuB,kBAAkB,CAAC,IAAI,CAAC;QAgCjE;;;aAGK;QACI,SAAI,GAAmB,cAAc,CAAC,MAAM,CAAC;QAItD;;aAEK;QACI,eAAU,GAAY,IAAI,CAAC;QAkB1B,oBAAe,GAAY,KAAK,CAAC;QAE3C;;aAEK;QACI,qBAAgB,GAAW,GAAG,CAAC;QAExC;;aAEK;QACK,eAAU,GAAoB,IAAI,YAAY,EAAE,CAAC;IAC7D,CAAC;IAtBC;;;SAGK;IAEL,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IACD,IAAI,cAAc,CAAC,KAAc;QAC/B,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;CAYF,CAAA;AA7EU;IAAR,KAAK,EAAE;;0DAA+B;AAK9B;IAAR,KAAK,EAAE;;sDAAyD;AAKxD;IAAR,KAAK,EAAE;;gDAAQ;AAKP;IAAR,KAAK,EAAE;;gDAAQ;AAKP;IAAR,KAAK,EAAE;;mDAAwB;AAKvB;IAAR,KAAK,EAAE;8BAAmB,IAAI;6DAAuB;AAK7C;IAAR,KAAK,EAAE;8BAAqB,IAAI;+DAAuB;AAK/C;IAAR,KAAK,EAAE;8BAAoB,IAAI;8DAAuB;AAM9C;IAAR,KAAK,EAAE;;iDAA8C;AAE7C;IAAR,KAAK,EAAE;;wDAAgB;AAKf;IAAR,KAAK,EAAE;;uDAA4B;AAK3B;IAAR,KAAK,EAAE;;iDAAS;AAOjB;IADC,KAAK,EAAE;;;yDAGP;AASQ;IAAR,KAAK,EAAE;;6DAAgC;AAK9B;IAAT,MAAM,EAAE;8BAAa,YAAY;uDAAyB;AAlFhD,mBAAmB;IAtB/B,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;GAkBT;KACF,CAAC;GACW,mBAAmB,CAmF/B;SAnFY,mBAAmB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\n\nimport { NbCalendarCell, NbCalendarSize, NbCalendarViewMode } from '../calendar-kit/model';\nimport { convertToBoolProperty } from '../helpers';\n\n\n/**\n * Calendar component provides a capability to choose a date.\n *\n * ```html\n * <nb-calendar [(date)]=\"date\"></nb-calendar>\n * <nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n * ```\n *\n * Basic usage example\n * @stacked-example(Showcase, calendar/calendar-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCalendarModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCalendarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to select ranges you can use `NbCalendarRangeComponent`.\n *\n * ```html\n * <nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n * <nb-calendar-range [range]=\"range\" (rangeChange)=\"handleRangeChange($event)\"></nb-calendar-range>\n * ```\n *\n * In order to use it, you have to import `NbCalendarRangeModule`.\n * @stacked-example(Range, calendar/calendar-range-showcase.component)\n *\n * The calendar component is supplied with a calendar header that contains navigate today button.\n * If you do not want to use it you can hide calendar header using `showHeader` property.\n * @stacked-example(Header, calendar/calendar-without-header.component)\n *\n * As you can see in the basic usage example calendar contains previous and next month days\n * which can be disabled using `boundingMonth` property.\n * @stacked-example(Bounding months, calendar/calendar-bounding-month.component)\n *\n * You can define starting view of the calendar by setting `startView` property.\n * Available values: year, month and date.\n * @stacked-example(Start view, calendar/calendar-start-view.component)\n *\n * You can use a larger version of the calendar by defining size property.\n * Available values: medium(which is default) and large.\n * @stacked-example(Size, calendar/calendar-size.component)\n *\n * Calendar supports min and max dates which disables values out of min-max range.\n * @stacked-example(Borders, calendar/calendar-min-max.component)\n *\n * Also, you can define custom filter property that should be predicate which receives\n * date and returns false if this date has to be disabled. In this example, we provide the filter\n * which disables weekdays.\n * @stacked-example(Filter, calendar/calendar-filter.component)\n *\n * Week numbers column could be enabled via `showWeekNumber` binding:\n * @stacked-example(Week number, calendar/calendar-week-number.component)\n *\n * If you need create custom cells you can easily provide custom components for\n * calendar. For examples if you want to show any average price under each date you can\n * just provide custom `dayCellComponent`. Custom cells for month and year can be provided\n * the same way, check API reference.\n * @stacked-example(Custom day cell, calendar/calendar-custom-day-cell-showcase.component)\n *\n * @styles\n *\n * calendar-width:\n * calendar-body-height:\n * calendar-border-radius:\n * calendar-text-color:\n * calendar-text-font-family:\n * calendar-text-font-size:\n * calendar-text-font-weight:\n * calendar-text-line-height:\n * calendar-header-text-color:\n * calendar-header-text-font-family:\n * calendar-header-title-text-font-size:\n * calendar-header-title-text-font-weight:\n * calendar-header-title-text-line-height:\n * calendar-header-sub-title-text-font-size:\n * calendar-header-sub-title-text-font-weight:\n * calendar-header-sub-title-text-line-height:\n * calendar-navigation-button-width:\n * calendar-cell-inactive-text-color:\n * calendar-cell-in-range-background-color:\n * calendar-cell-disabled-background-color:\n * calendar-cell-disabled-text-color:\n * calendar-cell-selected-background-color:\n * calendar-cell-selected-text-color:\n * calendar-cell-selected-text-font-size:\n * calendar-cell-selected-text-font-weight:\n * calendar-cell-selected-text-line-height:\n * calendar-cell-hover-background-color:\n * calendar-cell-hover-text-color:\n * calendar-cell-hover-text-font-size:\n * calendar-cell-hover-text-font-weight:\n * calendar-cell-hover-text-line-height:\n * calendar-cell-active-background-color:\n * calendar-cell-active-text-color:\n * calendar-cell-active-text-font-size:\n * calendar-cell-active-text-font-weight:\n * calendar-cell-active-text-line-height:\n * calendar-cell-today-background-color:\n * calendar-cell-today-text-color:\n * calendar-cell-today-text-font-size:\n * calendar-cell-today-text-font-weight:\n * calendar-cell-today-text-line-height:\n * calendar-day-cell-width:\n * calendar-day-cell-height:\n * calendar-month-cell-width:\n * calendar-month-cell-height:\n * calendar-year-cell-width:\n * calendar-year-cell-height:\n * calendar-weekday-background:\n * calendar-weekday-divider-color:\n * calendar-weekday-text-color:\n * calendar-weekday-text-font-size:\n * calendar-weekday-text-font-weight:\n * calendar-weekday-text-line-height:\n * calendar-weekday-holiday-text-color:\n * calendar-weekday-height:\n * calendar-weekday-width:\n * calendar-weeknumber-background:\n * calendar-weeknumber-divider-color:\n * calendar-weeknumber-divider-width:\n * calendar-weeknumber-text-color:\n * calendar-weeknumber-text-font-size:\n * calendar-weeknumber-text-font-weight:\n * calendar-weeknumber-text-line-height:\n * calendar-weeknumber-height:\n * calendar-weeknumber-width:\n * calendar-large-width:\n * calendar-large-body-height:\n * calendar-day-cell-large-width:\n * calendar-day-cell-large-height:\n * calendar-weekday-large-height:\n * calendar-weekday-large-width:\n * calendar-month-cell-large-width:\n * calendar-month-cell-large-height:\n * calendar-year-cell-large-width:\n * calendar-year-cell-large-height:\n * */\n@Component({\n  selector: 'nb-calendar',\n  template: `\n    <nb-base-calendar\n      [boundingMonth]=\"boundingMonth\"\n      [startView]=\"startView\"\n      [date]=\"date\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [dayCellComponent]=\"dayCellComponent\"\n      [monthCellComponent]=\"monthCellComponent\"\n      [yearCellComponent]=\"yearCellComponent\"\n      [size]=\"size\"\n      [visibleDate]=\"visibleDate\"\n      [showHeader]=\"showHeader\"\n      [showWeekNumber]=\"showWeekNumber\"\n      [weekNumberSymbol]=\"weekNumberSymbol\"\n      (dateChange)=\"dateChange.emit($event)\"\n    ></nb-base-calendar>\n  `,\n})\nexport class NbCalendarComponent<D> {\n\n  /**\n   * Defines if we should render previous and next months\n   * in the current month view.\n   * */\n  @Input() boundingMonth: boolean = true;\n\n  /**\n   * Defines starting view for calendar.\n   * */\n  @Input() startView: NbCalendarViewMode = NbCalendarViewMode.DATE;\n\n  /**\n   * Minimum available date for selection.\n   * */\n  @Input() min: D;\n\n  /**\n   * Maximum available date for selection.\n   * */\n  @Input() max: D;\n\n  /**\n   * Predicate that decides which cells will be disabled.\n   * */\n  @Input() filter: (D) => boolean;\n\n  /**\n   * Custom day cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() dayCellComponent: Type<NbCalendarCell<D, D>>;\n\n  /**\n   * Custom month cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() monthCellComponent: Type<NbCalendarCell<D, D>>;\n\n  /**\n   * Custom year cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() yearCellComponent: Type<NbCalendarCell<D, D>>;\n\n  /**\n   * Size of the calendar and entire components.\n   * Can be 'medium' which is default or 'large'.\n   * */\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n\n  @Input() visibleDate: D;\n\n  /**\n   * Determines should we show calendars header or not.\n   * */\n  @Input() showHeader: boolean = true;\n\n  /**\n   * Date which will be rendered as selected.\n   * */\n  @Input() date: D;\n\n  /**\n   * Determines should we show week numbers column.\n   * False by default.\n   * */\n  @Input()\n  get showWeekNumber(): boolean {\n    return this._showWeekNumber;\n  }\n  set showWeekNumber(value: boolean) {\n    this._showWeekNumber = convertToBoolProperty(value);\n  }\n  protected _showWeekNumber: boolean = false;\n\n  /**\n   * Sets symbol used as a header for week numbers column\n   * */\n  @Input() weekNumberSymbol: string = '#';\n\n  /**\n   * Emits date when selected.\n   * */\n  @Output() dateChange: EventEmitter<D> = new EventEmitter();\n}\n"]}