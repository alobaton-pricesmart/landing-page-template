{"version":3,"file":"chat-message-file.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/chat/chat-message-file.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC7F,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AAEzD;;GAEG;AA0BH,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAuCrC,YAAsB,EAAqB,EAAY,YAA0B;QAA3D,OAAE,GAAF,EAAE,CAAmB;QAAY,iBAAY,GAAZ,YAAY,CAAc;IACjF,CAAC;IAlBD;;;OAGG;IAEH,IAAI,KAAK,CAAC,KAAY;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;YAChD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnC,yBACK,IAAI,IACP,QAAQ,EAAE,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,OAAO,IAAI,CAAC,GAAG,GAAG,CAAC,EACnF,OAAO,EAAE,OAAO,IAChB;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAMD,OAAO,CAAC,IAAS;QACf,OAAO,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtE,CAAC;CACF,CAAA;AAtCU;IAAR,KAAK,EAAE;;2DAAiB;AAMhB;IAAR,KAAK,EAAE;;0DAAgB;AAMf;IAAR,KAAK,EAAE;8BAAO,IAAI;wDAAC;AAOpB;IADC,KAAK,EAAE;;;uDAWP;AArCU,0BAA0B;IAzBtC,SAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;GAoBT;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;qCAwC0B,iBAAiB,EAA0B,YAAY;GAvCtE,0BAA0B,CA8CtC;SA9CY,0BAA0B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * Chat message component.\n */\n@Component({\n  selector: 'nb-chat-message-file',\n  template: `\n    <nb-chat-message-text [sender]=\"sender\" [date]=\"date\" [message]=\"message\">\n      {{ message }}\n    </nb-chat-message-text>\n\n    <ng-container *ngIf=\"readyFiles?.length > 1\">\n      <div class=\"message-content-group\">\n        <a *ngFor=\"let file of readyFiles\" [href]=\"file.url\" target=\"_blank\">\n          <nb-icon [icon]=\"file.icon\" *ngIf=\"!file.urlStyle && file.icon\"></nb-icon>\n          <div *ngIf=\"file.urlStyle\" [style.background-image]=\"file.urlStyle\"></div>\n        </a>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"readyFiles?.length === 1\">\n      <a [href]=\"readyFiles[0].url\" target=\"_blank\">\n        <nb-icon [icon]=\"readyFiles[0].icon\" *ngIf=\"!readyFiles[0].urlStyle && readyFiles[0].icon\"></nb-icon>\n        <div *ngIf=\"readyFiles[0].urlStyle\" [style.background-image]=\"readyFiles[0].urlStyle\"></div>\n      </a>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbChatMessageFileComponent {\n\n  readyFiles: any[];\n\n  /**\n   * Message sender\n   * @type {string}\n   */\n  @Input() message: string;\n\n  /**\n   * Message sender\n   * @type {string}\n   */\n  @Input() sender: string;\n\n  /**\n   * Message send date\n   * @type {Date}\n   */\n  @Input() date: Date;\n\n  /**\n   * Message file path\n   * @type {Date}\n   */\n  @Input()\n  set files(files: any[]) {\n    this.readyFiles = (files || []).map((file: any) => {\n      const isImage = this.isImage(file);\n      return {\n        ...file,\n        urlStyle: isImage && this.domSanitizer.bypassSecurityTrustStyle(`url(${file.url})`),\n        isImage: isImage,\n      };\n    });\n    this.cd.detectChanges();\n  }\n\n  constructor(protected cd: ChangeDetectorRef, protected domSanitizer: DomSanitizer) {\n  }\n\n\n  isImage(file: any): boolean {\n    return ['image/png', 'image/jpeg', 'image/gif'].includes(file.type);\n  }\n}\n"]}